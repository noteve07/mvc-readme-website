@model IEnumerable<MvcReadMe_Group4.Models.User>

@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .table-container {
        max-height: 74vh;
        overflow-y: auto;
        border: 1px solid #3d4554;
        border-top: 2px solid #359b9f;
        border-bottom: 2px solid #3d4554;
        scrollbar-width: thin;
        scrollbar-color: #555 transparent;
        border-radius: 15px;
    }

    .table-dark {
        width: 100%;
        font-size: 15px;
        border-collapse: collapse;
        background-color: #2b2f38;
        table-layout: fixed;
        border-top: 2px solid #359b9f;
        border-radius: 15px;
    }

        .table-dark thead th {
            background-color: #1c1f26;
            color: #ffffff;
            font-weight: 700;
            text-align: center;
            padding: 14px;
            border-top: 2px solid #359b9f;
            border-left: 1px solid #3d4554;
            border-right: 1px solid #3d4554;
            border-bottom: 1px solid #3d4554;
            position: sticky;
            top: 0;
            z-index: 1;
            cursor: pointer;
            user-select: none;
        }

            .table-dark thead th.sortable:hover {
                background-color: #2d313a;
            }

        .table-dark tbody td {
            padding: 14px;
            text-align: center;
            color: #f0f0f0;
            border: 1px solid #3d4554;
            vertical-align: middle;
            word-wrap: break-word;
        }

    .icons-row {
        display: flex;
        justify-content: center;
        gap: 25px;
        padding: 0 10px;
    }

    .icon-btn {
        font-size: 14px;
        padding: 8px 11px 8px 11px;
        border-radius: 6px;
        color: white;
        text-decoration: none;
    }

    .icon-view {
        background-color: #3498db;
    }

        .icon-view:hover {
            background-color: #2980b9;
        }

    .icon-edit {
        background-color: #f39c12;
    }

        .icon-edit:hover {
            background-color: #e67e22;
        }

    .icon-delete {
        background-color: #e74c3c;
    }

        .icon-delete:hover {
            background-color: #c0392b;
        }

    .table-container::-webkit-scrollbar {
        width: 8px;
    }

    .table-container::-webkit-scrollbar-track {
        background: transparent;
    }

    .table-container::-webkit-scrollbar-thumb {
        background-color: #555;
        border-radius: 10px;
    }

        .table-container::-webkit-scrollbar-thumb:hover {
            background-color: #777;
        }

    /* Flexbox for Header */
    .header-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

        .header-bar > h1 {
            margin: 0;
            font-size: 36px;
        }

        .header-bar > div {
            display: flex;
            align-items: center;
            gap: 30px;
            font-size: 20px;
        }

    .search-input {
        font-size: 16px;
        padding: 7px 10px;
        border-radius: 5px;
        background-color: #37414f;
        color: white;
        border: 1px solid #444;
        width: 270px;
    }

        .search-input:focus {
            outline: none;
        }

    .add-button {
        padding: 7px 10px;
        font-size: 16px;
        background-color: #27ae60;
        color: white;
        border-radius: 5px;
        text-decoration: none;
        margin-right: 10px;
    }

        .add-button:hover {
            background-color: #2ecc71;
        }

    body {
        overflow-x: hidden;
    }

    .table-dark th:nth-child(1), .table-dark td:nth-child(1) {
        width: 40%; /* UserName column */
    }

    .table-dark th:nth-child(2), .table-dark td:nth-child(2) {
        width: 40%; /* Password column */
    }

    .table-dark th:nth-child(3), .table-dark td:nth-child(3) {
        width: 20%; /* Actions column */
    }
</style>

<!-- Header with Flexbox for Title, Search, and Add User -->
<div class="header-bar">
    <h1>User Management</h1>
    <div>
        <input type="text" id="searchInput" onkeyup="filterTable()" placeholder="Search..." class="search-input">
        <a href="@Url.Action("Create")" class="add-button">➕ Add New User</a>
    </div>
</div>

<div class="table-container">
    <table class="table-dark" id="userTable">
        <thead>
            <tr>
                <th class="sortable" onclick="sortTable(0)">UserName</th>
                <th class="sortable" onclick="sortTable(1)">Password</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.UserName</td>
                    <td>
                        <span class="password" id="password-@item.Id" data-password="@item.Password">••••••••</span>
                        <span class="password-show" id="show-password-@item.Id" style="cursor: pointer; margin-left: 10px;" onclick="togglePassword(@item.Id)">
                            <i class="fas fa-eye"></i>
                        </span>
                    </td>
                    <td>
                        <div class="icons-row">
                            <a class="icon-btn icon-view" href="@Url.Action("Details", new { id = item.Id })" title="Details">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a class="icon-btn icon-edit" href="@Url.Action("Edit", new { id = item.Id })" title="Edit">
                                <i class="fas fa-pen"></i>
                            </a>
                            <a class="icon-btn icon-delete" href="@Url.Action("Delete", new { id = item.Id })" title="Delete">
                                <i class="fas fa-trash"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function filterTable() {
            const input = document.getElementById("searchInput").value.toLowerCase();
            const rows = document.querySelectorAll("#userTable tbody tr");
            rows.forEach(row => {
                const text = row.innerText.toLowerCase();
                row.style.display = text.includes(input) ? "" : "none";
            });
        }

        let currentSortColumn = -1;
        let ascending = true;

        function sortTable(n) {
            const table = document.getElementById("userTable");
            let rows, switching, i, x, y, shouldSwitch;
            switching = true;
            ascending = currentSortColumn === n ? !ascending : true;
            currentSortColumn = n;

            // remove existing sort indicators
            table.querySelectorAll("th").forEach(th => {
                th.classList.remove("sorted-asc", "sorted-desc");
            });

            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (ascending ? x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase() : x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }

            // add sort indicator
            table.querySelectorAll("th")[n].classList.add(ascending ? "sorted-asc" : "sorted-desc");
        }

        function togglePassword(id) {
            const passwordField = document.getElementById("password-" + id);
            const actualPassword = passwordField.getAttribute('data-password');
            const showPasswordIcon = document.getElementById("show-password-" + id);

            // If the password is currently hidden, show it
            if (passwordField.innerHTML === "••••••••") {
                // Change to show the password for 3 seconds
                passwordField.innerHTML = actualPassword;
                showPasswordIcon.innerHTML = "<i class='fas fa-eye-slash'></i>"; // change to eye-slash icon
                setTimeout(() => {
                    // Hide the password again after 3 seconds
                    passwordField.innerHTML = "••••••••";
                    showPasswordIcon.innerHTML = "<i class='fas fa-eye'></i>"; // change back to eye icon
                }, 3000); // 3 seconds timeout
            }
            else {
                // Hide the password if clicked again
                passwordField.innerHTML = "••••••••";
                showPasswordIcon.innerHTML = "<i class='fas fa-eye'></i>"; // revert to eye icon
            }
        }

    </script>
}
