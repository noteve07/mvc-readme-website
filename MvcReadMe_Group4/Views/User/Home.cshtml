@model IEnumerable<MvcReadMe_Group4.Models.Book>
@{
    ViewData["Title"] = "Home Page";
    Layout = "../Shared/_Layout.cshtml";
}

<style>
    .header {
        text-align: center;
        margin: 40px 0;
    }

    .header h1 {
        font-size: 2.7rem;
        font-weight: 800;
        margin-bottom: 0.5rem;
        text-shadow: 0 0 20px rgba(52, 152, 219, 0.3);
        margin-top: 3rem;
        color: #408ff7e8;
    }

    .header p {
        font-size: 1.1rem;
        color: #a0aec0;
        margin-bottom: 4.5rem;
    }

    .search-container {
        max-width: 1035px;
        margin: 0 auto 36px;
        position: relative;
    }

    .search-input {
        width: 100%;
        padding: 9px 13px;
        font-size: 1rem;
        background-color: rgba(26, 31, 44, 0.8);
        border: 1px solid rgba(52, 152, 219, 0.2);
        border-radius: 8px;
        color: #fff;
    }

    .search-input:focus {
        outline: none;
        background-color: rgba(26, 31, 44, 0.9);
        border-color: #3498db;
        box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
    }

    .search-button {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #8b949e;
        font-size: 1.2rem;
        cursor: pointer;
        padding: 5px 10px;
    }

    .search-button:hover {
        color: #3498db;
    }

    .books-grid {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 18px;
        padding: 0 22px;
        max-width: 1035px;
        margin: 0 auto;
    }

    .book-card {
        background: rgba(26, 31, 44, 0.8);
        border: 1px solid rgba(52, 152, 219, 0.1);
        border-radius: 9px;
        overflow: hidden;
        transition: all 0.3s ease-in-out;
        cursor: pointer;
        text-decoration: none;
    }

    .book-card:hover {
        transform: translateY(-5px);
        border-color: #3498db;
        box-shadow: 0 10px 20px rgba(52, 152, 219, 0.2);
    }

    .book-cover {
        width: 100%;
        aspect-ratio: 2/3;
        object-fit: cover;
        border-radius: 10px 10px 0 0;
    }

    .book-info {
        padding: 11px;
    }

    .book-title {
        font-size: 0.9rem;
        font-weight: 600;
        color: #fff;
        margin-bottom: 0.3rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .book-author {
        font-size: 0.8rem;
        color: #a0aec0;
    }

    .list-view {
        display: none;
        max-width: 1150px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .list-item {
        display: flex;
        align-items: flex-start;
        background: rgba(26, 31, 44, 0.8);
        border: 1px solid rgba(52, 152, 219, 0.1);
        border-radius: 10px;
        margin-bottom: 1.5rem;
        padding: 1.2rem;
        color: #e0e0e0;
        transition: border 0.2s;
        text-decoration: none;
    }

    .list-item:hover {
        border-color: #3498db;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(52, 152, 219, 0.2);
    }

    .list-cover {
        width: 90px;
        height: 130px;
        object-fit: cover;
        border-radius: 8px;
        margin-right: 1.5rem;
        background: #2d3748;
        border: 1px solid rgba(52, 152, 219, 0.1);
    }

    .list-info {
        flex: 1;
    }

    .list-title {
        font-size: 1.2rem;
        font-weight: 700;
        color: #fff;
        margin-bottom: 0.3rem;
    }

    .list-author {
        color: #fff;
        font-size: 1rem;
        margin-bottom: 0.5rem;
    }

    .list-desc {
        color: #a0aec0;
        font-size: 0.95rem;
        margin-bottom: 0.2rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    @@media (max-width: 1200px) {
        .books-grid {
            grid-template-columns: repeat(4, 1fr);
        }
    }

    @@media (max-width: 992px) {
        .books-grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    @@media (max-width: 768px) {
        .books-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 480px) {
        .books-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }
</style>

<div class="header">
    <h1>E-Library Portal</h1>
    <p>Discover the world of books</p>
</div>

<div class="search-container">
    <input type="text" class="search-input" placeholder="Search for books..." id="searchInput">
    <button class="search-button">
        <i class="bi bi-search"></i>
    </button>
</div>

<div class="books-grid">
    @foreach (var book in Model)
    {
        <a href="@Url.Action("BookDetails", new { id = book.Id })" class="book-card">
            <img src="@book.CoverImagePath" alt="@book.Title" class="book-cover">
            <div class="book-info">
                <div class="book-title">@book.Title</div>
                <div class="book-author">@book.Author</div>
            </div>
        </a>
    }
</div>

<div class="list-view">
    @foreach (var book in Model)
    {
        <a href="@Url.Action("BookDetails", new { id = book.Id })" class="list-item">
            <img src="@book.CoverImagePath" alt="@book.Title" class="list-cover">
            <div class="list-info">
                <div class="list-title">@book.Title</div>
                <div class="list-author">@book.Author</div>
                <div class="list-desc">@book.Description</div>
            </div>
        </a>
    }
</div>

@section Scripts {
    <script>
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const bookCards = document.querySelectorAll('.book-card');
            const listItems = document.querySelectorAll('.list-item');
            const booksGrid = document.querySelector('.books-grid');
            const listView = document.querySelector('.list-view');
            
            if (searchTerm.length > 0) {
                booksGrid.style.display = 'none';
                listView.style.display = 'block';
                
                listItems.forEach(item => {
                    const title = item.querySelector('.list-title').textContent.toLowerCase();
                    const author = item.querySelector('.list-author').textContent.toLowerCase();
                    const desc = item.querySelector('.list-desc').textContent.toLowerCase();
                    
                    if (title.includes(searchTerm) || author.includes(searchTerm) || desc.includes(searchTerm)) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });
            } else {
                booksGrid.style.display = 'grid';
                listView.style.display = 'none';
            }
        });
    </script>
}
