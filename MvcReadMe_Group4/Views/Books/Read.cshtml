@model MvcReadMe_Group4.Models.Book
@{
    ViewData["Title"] = Model.Title;
}

<div class="book-reader">
    <iframe src="@Model.FilePath" width="100%" height="100%" frameborder="0"></iframe>
</div>

@Html.AntiForgeryToken()

@section Scripts {
    <script>
        // Function to increment reads
        async function incrementReads() {
            try {
                const response = await fetch('/Books/IncrementReads/@Model.Id', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();
                console.log('Read count updated:', data.totalReads);
            } catch (error) {
                console.error('Error updating read count:', error);
            }
        }

        // Call incrementReads when the iframe loads
        document.addEventListener('DOMContentLoaded', function() {
            const iframe = document.querySelector('iframe');
            iframe.addEventListener('load', function() {
                // Add a small delay to ensure the book is actually being read
                setTimeout(incrementReads, 1000);
            });
        });
    </script>
} 